<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.qa.iq</groupId>
  <artifactId>iq</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>iq</name>
  <url>http://www.example.com</url>

  <properties>
	<maven.compiler.release>11</maven.compiler.release>
	<codeclimate.test.reporter.id>db9f141b00c03cf04b3077df617d05f2bea74d3acbe19184016a1a2674a981a1</codeclimate.test.reporter.id>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
      <plugins>
	  	<plugin>
			<groupId>com.googlecode.maven-download-plugin</groupId>
			<artifactId>download-maven-plugin</artifactId>
			<version>1.3.0</version>
			<executions>
				<execution>
					<id>wget-cc-test-reporter</id>
					<phase>generate-resources</phase>
					<goals>
						<goal>wget</goal>
					</goals>
					<configuration>
						<url>https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64</url>
						<skipCache>true</skipCache>
						<outputFileName>cc-test-reporter</outputFileName>
						<outputDirectory>${project.build.directory}</outputDirectory>
					</configuration>
				</execution>
				<execution>
					<id>wget-cc-post-reporter</id>
					<phase>generate-resources</phase>
					<goals>
						<goal>wget</goal>
					</goals>
					<configuration>
						<url>http://qa-rpt01.a.fsglobal.net/files/cc-post-report</url>
						<skipCache>true</skipCache>
						<outputFileName>cc-post-report</outputFileName>
						<outputDirectory>${project.build.directory}</outputDirectory>
					</configuration>
				</execution>
			</executions>
	  	</plugin>
	  	<plugin>
			<artifactId>exec-maven-plugin</artifactId>
			<version>1.6.0</version>
			<groupId>org.codehaus.mojo</groupId>
			<executions>
				<execution>
					<id>fix-permissions</id>
					<phase>process-resources</phase>
					<goals>
						<goal>exec</goal>
					</goals>
					<configuration>
						<executable>chmod</executable>
						<arguments>
							<argument>
								+x
							</argument>
							<argument>
								${project.build.directory}/cc-post-report
							</argument>
							<argument>
								${project.build.directory}/cc-test-reporter
							</argument>
						</arguments>
					</configuration>
				</execution>
				<!-- At package time, post the coverage results to CodeClimate -->
				<execution>
					<id>cc-test-reporter after-build</id>
					<phase>package</phase>
					<goals>
						<goal>exec</goal>
					</goals>
					<configuration>
						<executable>bash</executable>
						<arguments>
							<argument>
								${project.build.directory}/cc-post-report
							</argument>
							<argument>
								${project.build.sourceDirectory}
							</argument>
							<argument>
								${codeclimate.test.reporter.id}
							</argument>
						</arguments>
					</configuration>
				</execution>
				<!-- Tell CodeClimate were about to do a build -->
				<execution>
					<id>cc-test-reporter before-build</id>
					<phase>process-resources</phase>
					<goals>
						<goal>exec</goal>
					</goals>
					<configuration>
						<executable>${project.build.directory}/cc-test-reporter</executable>
						<commandlineArgs>before-build</commandlineArgs>
					</configuration>
				</execution>
			</executions>
		</plugin>
		<plugin>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>0.8.4</version>
			<executions>
				<execution>
					<id>default-prepare-agent</id>
					<goals>
						<goal>prepare-agent</goal>
					</goals>
				</execution>
				<execution>
					<id>default-report</id>
					<phase>prepare-package</phase>
					<goals>
						<goal>report</goal>
					</goals>
				</execution>
				<execution>
					<id>default-check</id>
					<goals>
						<goal>check</goal>
					</goals>
					<configuration>
						<rules>
							<rule>
								<element>BUNDLE</element>
								<limits>
									<limit>
										<counter>COMPLEXITY</counter>
										<value>COVEREDRATIO</value>
										<minimum>0.60</minimum>
									</limit>
								</limits>
							</rule>
						</rules>
					</configuration>
				</execution>
			</executions>
		</plugin>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
      </plugins>
  </build>
</project>
